<% title "Netzke::Basepack::Window" %>
<%= link_to_code %>

<h2>Features:</h2>
<ol>
<li>Straight-forward nesting of any other Netzke widget</li>
<li>Persistent resize and position</li>
</ol>

<h2>Example 1: a simple persistent window</h2>
<p>Just a window that remembers its size and position</p>

<input type="button" value="Show window" onClick="Netzke.page.window.show(); Ext.get(this).hide();" />

<%= netzke :window, :class_name => "Netzke::Basepack::Window", :width => 200, :height => 100, :persistence => true %>

<h2>Example 2: a window nesting a GridPanel</h2>

<input type="button" value="Show window" onClick="Netzke.page.windowWithGridPanel.show(); Ext.get(this).hide();" />

<%= netzke :window_with_grid_panel,
      :class_name => "Netzke::Basepack::Window",
      :width => 700, :height => 400,
      :persistence => true,
      :items => [{
        :class_name => "Netzke::Basepack::GridPanel",
        :model => "Boss",
        :header => false, :border => true
      }]
%>

<h2>Example 3: a window nesting the BossesAndClerks component (from <a href="http://blog.writelesscode.com/blog/2009/09/24/building-rails-extjs-reusable-components-with-netzke-part-3/">this</a> tutorial)</h2>

<input type="button" value="Show window" onClick="Netzke.page.windowWithBossesAndClerks.show(); Ext.get(this).hide();" />

<%= netzke :window_with_bosses_and_clerks,
      :class_name => "Netzke::Basepack::Window",
      :width => "80%", :height => 600,
      :persistence => true,
      :items => [{
        :class_name => "BossesAndClerks",
        :header => false, :border => true
      }]
%>

<h2>Example 4: empty window with predefined dimensions that can be reopened after closing</h2>
<p>Simply setting the <tt>Ext.Window</tt>'s <tt>closeAction</tt> option to "hide"</p>

<input type="button" value="Show window" onClick="Netzke.page.reopenableWindow.show()" />
<%= netzke :reopenable_window,
      :class_name => "Netzke::Basepack::Window",
      :persistence => true,
      :close_action => "hide",
      :width => 200, :height => 100
%>
